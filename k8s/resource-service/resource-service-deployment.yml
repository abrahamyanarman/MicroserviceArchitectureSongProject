apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-service
  namespace: k8s-microservice-song-project
spec:
  selector:
    matchLabels:
      app: resource-service
  replicas: 3
  template:
    metadata:
      labels:
        app: resource-service
        owner: armanabr
    spec:
      containers:
        - name: resource-service
          image: armanabr/resource-service:0.0.4
          envFrom:
            - secretRef:
                name: resource-service-secrets
            - configMapRef:
                name: rs-pg-db-config
          ports:
            - name: rs-port
              containerPort: 8082
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: rs-port
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: rs-port
            initialDelaySeconds: 30
            periodSeconds: 10
      initContainers:
        - name: init-config-server
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup config-server.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for config-server; sleep 2; done" ]
        - name: init-postgres-resource-service
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup postgres-resource-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for postgres-resource-service; sleep 2; done" ]
      restartPolicy: Always